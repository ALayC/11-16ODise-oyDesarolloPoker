package IU;

import Controladores.AdministrarMesasControlador;
import Controladores.ControlMesa;
import Dominio.EstadoMesa;
import Dominio.Mano;
import Dominio.Mesa;
import Interfaces.AdministrarMesasVista;
import Interfaces.VistaControlMesa;

import Observador.Observable;
import java.util.ArrayList;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;


public class AdministrarMesas extends javax.swing.JFrame implements AdministrarMesasVista {

    private AdministrarMesasControlador controlador;

    public AdministrarMesas() {
        controlador = new AdministrarMesasControlador(this); // Pasar la vista al controlador
        
        initComponents();
        setLocationRelativeTo(null); // Centrar la ventana
        cargarDatosLista();
        
    }

    private void cargarDatosLista() {
    DefaultListModel<String> listModel = new DefaultListModel<>();

    // Variable para el monto total recaudado
    double totalRecaudado = 0;

    // Obtener la lista de mesas desde el controlador
    for (Mesa mesa : controlador.obtenerMesas()) {
        int numeroMesa = mesa.getNumeroMesa();
        int jugadoresRequeridos = mesa.getCantidadJugadores();
        double apuestaBase = mesa.getApuestaBase();
        int jugadoresActuales = mesa.getCantidadActualJugadores();
        double montoTotalApostado = mesa.getMontoTotalApostado();
        double porcentajeComision = mesa.getPorcentajeComision();
        double montoTotalRecaudadoMesa = mesa.getMontoTotalRecaudado();
        String estadoMesa = mesa.getEstado().toString();

        totalRecaudado += montoTotalRecaudadoMesa;

        // Informaci贸n general de la mesa
        String infoMesa = String.format(
            "Mesa %d | Jugadores Requeridos: %d | Apuesta Base: %.2f | " +
            "Jugadores Actuales: %d | Total Apostado: %.2f | " +
            "Comisi贸n: %.2f%% | Recaudado: %.2f | Estado: %s",
            numeroMesa, jugadoresRequeridos, apuestaBase,
            jugadoresActuales, montoTotalApostado,
            porcentajeComision, montoTotalRecaudadoMesa, estadoMesa
        );

        listModel.addElement(infoMesa);
    }

    // Asignar el modelo a la lista ListMesas
    listMesas.setModel(listModel);
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMontoRecaudado = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMesas = new javax.swing.JList<>();
        btnInfoDeManos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMontoRecaudado.setText("Monto total recaudado en mesas:");

        jScrollPane2.setViewportView(listMesas);

        btnInfoDeManos.setText("Informacion de manos");
        btnInfoDeManos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoDeManosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblMontoRecaudado)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(341, 341, 341)
                .addComponent(btnInfoDeManos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblMontoRecaudado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInfoDeManos)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInfoDeManosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoDeManosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnInfoDeManosActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInfoDeManos;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMontoRecaudado;
    private javax.swing.JList<String> listMesas;
    // End of variables declaration//GEN-END:variables

    public void fijarNombre(String nombreCompleto) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void cargarMesas(ArrayList<Mesa> mesas) {
        // Crear un modelo de lista
    DefaultListModel<String> listModel = new DefaultListModel<>();
    
    double totalRecaudado = 0;
    for (Mesa mesa : mesas) {
        int numeroMesa = mesa.getNumeroMesa();
        int jugadoresRequeridos = mesa.getCantidadJugadores();
        double apuestaBase = mesa.getApuestaBase();
        int jugadoresActuales = mesa.getCantidadActualJugadores();
        String estadoMesa = mesa.getEstado().toString();
        double montoTotalRecaudadoMesa = mesa.getMontoTotalRecaudado();

        totalRecaudado += montoTotalRecaudadoMesa;

        // Formatear la informaci贸n de la mesa para mostrarla en la lista
        String mesaInfo = String.format(
            "Mesa %d | Jugadores: %d/%d | Apuesta: %.2f | Estado: %s | Recaudado: %.2f",
            numeroMesa, jugadoresActuales, jugadoresRequeridos, apuestaBase, estadoMesa, montoTotalRecaudadoMesa
        );

        // Agregar la informaci贸n al modelo de la lista
        listModel.addElement(mesaInfo);
    }

    // Asignar el modelo a la JList
    listMesas.setModel(listModel);
    }

    @Override
    public void mostrarError(String saldo_insuficiente_para_ingresar_a_la_mes) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void mostrarMensaje(String la_mesa_ha_sido_iniciada) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }




}
